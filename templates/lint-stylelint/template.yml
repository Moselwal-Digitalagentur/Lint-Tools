#  Moselwal Digitalagentur Release Tools
#    Copyright (C) 2024  Moselwal Digitalagentur GmbH, Kai Ole Hartwig <support@moselwal.de>
#
#  This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.

spec:
  inputs:
    stage:
      default: 'test'
      description: "The stage in the CI/CD pipeline where this job will run.  "
    rules-config:
      description: "Configuration rules that determine when the job should run."
      type: array
      default:
        - if: $CI_COMMIT_TAG
          when: never
        - if: $CI_COMMIT_REF_NAME == 'release'
          when: never
        - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
          exists:
            - ./**/package.json
        - if: $CI_COMMIT_REF_NAME != 'release'
          exists:
            - ./**/package.json
    needs-config:
      description: "Configure the jobs that needed to run this job."
      type: array
      default:
        - job: build:extension:frontend
          optional: true
        - job: build:prepare
          optional: true
    image-config:
      description: "The Docker image to use for the job. This should use semantic versioning."
      default: "$CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX/$NODE_VERSION-alpine"
    tags-config:
      description: "Tags used to select specific runners to execute the job."
      type: array
      default:
        - docker
    additional-script-begin:
      description: "Add additional Script at the beginning of the Script."
      default: ''
    additional-script-end:
      description: "Add additional Script at the end of the Script."
      default: ''
---
lint:stylelint:
  stage: $[[ inputs.stage ]]
  image: $[[ inputs.image-config | expand_vars ]]
  needs: $[[ inputs.needs-config ]]
  rules: $[[ inputs.rules-config ]]
  allow_failure: false
  tags: $[[ inputs.tags-config ]]
  script:
    - $[[ inputs.additional-script-begin ]]
    - NPM_BUILD_DIR=$(find ${CI_PROJECT_DIR} -type f -name "package.json" -exec dirname {} \;)
    - export NPM_BUILD_DIR
    - npm ci
    - npm run lint:stylelint.report.junit
    - $[[ inputs.additional-script-end ]]
  after_script:
    - sed -i "s+$(pwd)++g" ${CI_PROJECT_DIR}/${NPM_BUILD_DIR}/reports/stylelintreport.junit.xml
    - sed -i "s+ name=+ file=+g" ${CI_PROJECT_DIR}/${NPM_BUILD_DIR}/reports/stylelintreport.junit.xml
  artifacts:
    expire_in: 60 minutes
    reports:
      junit: ${CI_PROJECT_DIR}/${NPM_BUILD_DIR}/reports/stylelintreport.junit.xml